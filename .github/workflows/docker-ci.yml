name: Docker CI Build & Test

on:
  push:
    branches: [ "docker-ci" ]
  pull_request:
    branches: [ "docker-ci" ]

jobs:
  build-test:
    name: Build & Test Full Stack
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: obscura_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U test"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout infrastructure repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Checkout backend repo
        uses: actions/checkout@v4
        with:
          repository: jbroers/obscura_backend
          path: obscura_backend
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Checkout frontend repo
        uses: actions/checkout@v4
        with:
          repository: jbroers/obscura_frontend
          path: obscura_frontend
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Build backend image
        run: |
          docker build -t obscura-backend ./obscura_backend

      - name: Build frontend image
        run: |
          docker build -t obscura-frontend ./obscura_frontend

      - name: Run backend tests
        run: |
          cd obscura_backend
          ./gradlew test --no-daemon \
            -Dspring.datasource.url=jdbc:postgresql://localhost:5432/obscura_test \
            -Dspring.datasource.username=test \
            -Dspring.datasource.password=test \
            -Dphoto.upload-dir=/tmp/uploads

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v6
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Verify frontend build
        run: |
          docker run --rm obscura-frontend npm run build

      - name: Verify frontend build
        run: |
          docker run --rm obscura-frontend npm run build

      - name: All tests passed
        run: echo "Backend + DB + Frontend builds OK"

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Tag backend image
        run: docker tag obscura-backend ${{ secrets.DOCKER_USERNAME }}/obscura-backend:latest

      - name: Push backend image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/obscura-backend:latest

      - name: Tag frontend image
        run: docker tag obscura-frontend ${{ secrets.DOCKER_USERNAME }}/obscura-frontend:latest

      - name: Push frontend image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/obscura-frontend:latest


