name: Docker CI Build & Test

on:
  push:
    branches: [ "docker-ci" ]
  pull_request:
    branches: [ "docker-ci" ]

jobs:
  build-test:
    name: Build & Test Full Stack
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: obscura_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U test"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout infrastructure repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Checkout backend repo
        uses: actions/checkout@v4
        with:
          repository: jbroers/obscura_backend
          path: obscura_backend
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Checkout frontend repo
        uses: actions/checkout@v4
        with:
          repository: jbroers/obscura_frontend
          path: obscura_frontend
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Build backend image
        run: |
          docker build -t obscura-backend ./obscura_backend

      - name: Build frontend image
        run: |
          docker build -t obscura-frontend ./obscura_frontend

      - name: Run backend tests
        run: |
          docker run --rm \
            --network bridge \
            -e SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/obscura_test \
            -e SPRING_DATASOURCE_USERNAME=test \
            -e SPRING_DATASOURCE_PASSWORD=test \
            -e PHOTO_UPLOAD_DIR=/tmp/uploads \
            obscura-backend ./gradlew test --no-daemon

      - name: Verify frontend build
        run: |
          docker run --rm obscura-frontend npm run build

      - name: All tests passed
        run: echo "Backend + DB + Frontend builds OK"
