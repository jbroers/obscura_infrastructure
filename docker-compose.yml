services:
  db:
    image: postgres:15
    container_name: db
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${SPRING_DATASOURCE_USERNAME}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${SPRING_DATASOURCE_USERNAME}"]
      interval: 10s
      timeout: 5s
      retries: 10

  backend:
    build:
      context: ../obscura_backend
      dockerfile: Dockerfile
    container_name: backend
    env_file: .env.production
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      PHOTO_UPLOAD_DIR: ${PHOTO_UPLOAD_DIR}
    volumes:
      - ./uploads:/uploads
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: ../obscura_frontend
      dockerfile: Dockerfile
      args:
        BACKEND_URL: ${BACKEND_URL}
    container_name: frontend
    env_file: .env.production
    ports:
      - "3000:3000"
    depends_on:
      - backend

volumes:
  db_data:
